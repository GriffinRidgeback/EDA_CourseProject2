plot(1:10, 1:1000, type="l", is.na("?"), xlab = NULL, ylab = "Junk")
plot(1:100, 1:100, type="l", is.na("?"), xlab = NULL, ylab = "Junk")
plot(1:100, 1:100, type="l", is.na("?"), xlab = "", ylab = "Junk")
plot(1:100, 1:100, type="l", xlab = "", ylab = "Junk")
plot(1:100, 1:100, type="l", xlab = NULL, ylab = "Junk")
?plot
plot.new()
pWidth  <- 3
pHeight  <-  2
plot.window(c(0, pWidth), c(0, pHeight))
plot(5,)
plot(5, 5, type = "n", axes = F, ann = F, xlim=c(0, 10), ylim = c(0, 10))
plot(5, 5, type = "p", axes = F, ann = F, xlim=c(0, 10), ylim = c(0, 10))
plot(5, 5, type = "b", axes = F, ann = F, xlim=c(0, 10), ylim = c(0, 10))
mtext("x-axis", side = 1)
mtext("y-axis", side = 2)
title("An R plot")
box()
points(5,  #Put (red) point in the plot at (5,5)
5,
col="red")
points(5,
7,
col="orange",
pch=3,
cex=2)
points(c(0, 0, 1),
c(2, 4, 6),
col="green",
pch=4)
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
main=expression("main title"^2),
sub=expression("sub-title"[2]),
xlab="x-axis label",
ylab="y-axis label",
col.lab="blue",
cex.lab=0.75)
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
axes=FALSE)
box()
axis(2,
las=2)
axis(1,
las=0)
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
axes=FALSE)
box()
axis(2,
las=0)
axis(1,
las=0)
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
axes=FALSE)
box()
axis(2,
las=1)
axis(1,
las=0)
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
axes=FALSE)
box()
axis(2,
las=3)
axis(1,
las=0)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=1.0)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=-.05)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=-.025)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=-.075)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=-.0)
v1 <- c(0,pi/2,pi,3*pi/2,2*pi) # -> defines position of tick marks.
v2 <- c("0","Pi/2","Pi","3*Pi/2","2*Pi") # defines labels of tick marks.
x <- seq(0,2*pi,0.1)
y <- sin(x)
plot(x,
y,
xaxt = "n")
axis(side = 1,
at = v1,
labels = v2,
tck=-.1,
tcl = -0.5,
cex.axis=1.05,
col.axis="blue",
font.axis=5)
chol <- read.table(url("http://assets.datacamp.com/blog_assets/chol.txt"), header = TRUE)
library(ggplot2)
ggplot(chol, aes(x=chol$WEIGHT, y=chol$HEIGHT)) +
geom_point(aes(colour = factor(chol$MORT), shape=chol$SMOKE)) +
xlab("Weight") +
ylab("Height")
install.packages(c("dplyr", "jsonlite", "mime", "raster", "rasterVis", "rgdal", "rmarkdown", "sp", "tidyr"))
install.packages("kernlab")
library("kernlab", lib.loc="~/Library/R/3.2/library")
data(spam)
head(spam[, 1:5])
names(spam)
str(spam)
?rbinom
set.seed(3435)
trainIndicator  <- rbinom(4601, 1, 0.5)
table(trainIndicator)
trainSpam  <- spam[trainIndicator == 1, ]
testSpam  <- spam[trainIndicator == 0, ]
head(trainIndicator)
trainIndicator
names(trainSpam)
head(trainSpam$type)
table(trainSpam)
table(trainSpam$type
)
trainSpam$numType  <- as.numeric(trainSpam$type) - 1
trainSpam$numType
trainSpam$type
help("%>%")
?`%>%
`
??%>%
??`%>%`
.(.packages())
(.packages())
